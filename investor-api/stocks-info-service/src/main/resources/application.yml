server:
  port: 7091
#  servlet:
#    context-path: /stock-service/v1

app:
  input-file: stocks-info-service/src/main/resources/historyInfo/Аэрофлот_авиаперевозки.csv
#  output-file: output.dat

service:
  locale: ru_RU

springdoc:
  api-docs:
    path: /service-docs
  packages-to-scan: ru.otus.spring


spring:
  #  thymeleaf:
  #    enabled: false
  application:
    name: stock-service
  kafka:
    bootstrap-servers: ${kafka_bootstrap_servers:localhost:9092}
  batch:
    job:
      enabled: false

  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password:

  data:
    mongodb:
      #        authentication-database: admin
      #        database: BookService
      #        host: localhost
      #        port: 27017
      uri: mongodb://${MONGO_HOST:localhost}:27017/StockService
      authentication-database: admin


  #  mongock:
  #    change-logs-scan-package:
  #      - ru.otus.spring.changelogs
  #    runner-type: initializingbean

  output:
    ansi:
      enabled: ALWAYS


  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
      bindings:
        update-cache-out:
          destination: update-cache-info
          contentType: application/json
        archive-in:
          destination: archive
          contentType: application/json
        error-out:
          destination: error
          contentType: application/json

logging:
  pattern: ${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{70}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}

  level:
    root: info
    com:
      netflix:
        eureka: OFF
        discovery: OFF
    org:
      springframework: info
#      apache:
#        kafka:OFF

management:
  server:
    port: 7111

  endpoints:
    web:
      exposure:
        include: health, info, beans, metrics, loggers, threaddump, configprops
  endpoint:
    health:
      show-details: always
ru:
  otus:
    spring:
      cron: "0 * * * * ?"

#  file:
#    name: logs/mylog.log