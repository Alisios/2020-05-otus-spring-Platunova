server:
  port: 7091
#  servlet:
#    context-path: /stock-service/v1

service:
  locale: ru_RU

springdoc:
  api-docs:
    path: /service-docs
  packages-to-scan: ru.otus.spring

file-properties:
  filePath: stocks-info-service/src/main/resources/historyInfo/
  input-file: stocks-info-service/src/main/resources/historyInfo/Аэрофлот_авиаперевозки.csv

spring:
  #  thymeleaf:
  #    enabled: false
  application:
    name: stock-service

  batch:
    job:
      enabled: false

  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password:

  data:
    mongodb:
      authentication-database: admin
      database: StockService
      host: localhost
      port: 27017

  mongock:
    change-logs-scan-package:
      - ru.otus.spring.changelogs
    runner-type: initializingbean

  output:
    ansi:
      enabled: ALWAYS


  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
      bindings:
        archive-in:
          destination: archive
          contentType: application/json
        error-out:
          destination: error
          contentType: application/json

logging:
  pattern: ${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{70}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}

  level:
    root: info
    com:
      netflix:
        eureka: OFF
        discovery: OFF
    org:
      springframework: info
#      apache:
#        kafka:OFF



#  file:
#    name: logs/mylog.log