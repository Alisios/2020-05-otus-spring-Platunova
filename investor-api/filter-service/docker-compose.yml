version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
#      KAFKA_LISTENERS: INSIDE://:9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    depends_on:
      - zookeeper

    volumes:
      - ./:/etc/kafka

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - ./config/redis.conf:/redis.conf
    command: [ "redis-server","--protected-mode", "no", "/redis.conf" ]
#    networks:
#      - springDb

  app:
    build:
      context: .
      dockerfile: Dockerfile
    privileged: true
    ports:
      - 8011:8011
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:9092
    links:
      - kafka
#    networks:
#      - springDb

#networks:
#  springDb:
